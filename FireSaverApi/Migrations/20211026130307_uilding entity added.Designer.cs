// <auto-generated />
using System;
using FireSaverApi.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FireSaverApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211026130307_uilding entity added")]
    partial class uildingentityadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FireSaverApi.DataContext.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuildingCenterPositionId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SafetyDistance")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BuildingCenterPositionId")
                        .IsUnique()
                        .HasFilter("[BuildingCenterPositionId] IS NOT NULL");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("FireSaverApi.DataContext.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longtitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("FireSaverApi.DataContext.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastSeenBuildingPositionId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponsibleForBuildingId")
                        .HasColumnType("int");

                    b.Property<string>("RolesList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LastSeenBuildingPositionId")
                        .IsUnique()
                        .HasFilter("[LastSeenBuildingPositionId] IS NOT NULL");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasFilter("[Mail] IS NOT NULL");

                    b.HasIndex("ResponsibleForBuildingId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FireSaverApi.DataContext.Building", b =>
                {
                    b.HasOne("FireSaverApi.DataContext.Position", "BuildingCenterPosition")
                        .WithOne("Building")
                        .HasForeignKey("FireSaverApi.DataContext.Building", "BuildingCenterPositionId");

                    b.Navigation("BuildingCenterPosition");
                });

            modelBuilder.Entity("FireSaverApi.DataContext.User", b =>
                {
                    b.HasOne("FireSaverApi.DataContext.Position", "LastSeenBuildingPosition")
                        .WithOne("User")
                        .HasForeignKey("FireSaverApi.DataContext.User", "LastSeenBuildingPositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FireSaverApi.DataContext.Building", "ResponsibleForBuilding")
                        .WithMany("ResponsibleUsers")
                        .HasForeignKey("ResponsibleForBuildingId");

                    b.Navigation("LastSeenBuildingPosition");

                    b.Navigation("ResponsibleForBuilding");
                });

            modelBuilder.Entity("FireSaverApi.DataContext.Building", b =>
                {
                    b.Navigation("ResponsibleUsers");
                });

            modelBuilder.Entity("FireSaverApi.DataContext.Position", b =>
                {
                    b.Navigation("Building");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
